#CONFIG_NCS_SAMPLES_DEFAULTS=y

CONFIG_STDOUT_CONSOLE=y

# deprecated:
#CONFIG_CPLUSPLUS=y
#CONFIG_STD_CPP11=y
#CONFIG_NEWLIB_LIBC=y
#CONFIG_LIB_CPLUSPLUS=y


CONFIG_DEBUG_OPTIMIZATIONS=n
#CONFIG_SIZE_OPTIMIZATIONS=y

#Log config
CONFIG_LOG=n
CONFIG_LOG_DEFAULT_LEVEL=3
CONFIG_LOG_MODE_MINIMAL=n
# The thread analyser is a cool logging tool that shows how full stacks are for running threads. It can be used to detect stack overflow errors.
#CONFIG_THREAD_ANALYZER=y
#CONFIG_THREAD_ANALYZER_USE_LOG=y
#CONFIG_THREAD_ANALYZER_AUTO=y


# when working with the MSense Devices, the only debugging tool we have is the SEGGER_RTT and USB debug output. 
# We have a USB, but we have to set it up via CDC UART (CDC is a usb communication protocol) on device tree
CONFIG_USE_SEGGER_RTT=y
CONFIG_RTT_CONSOLE=y

CONFIG_LOG_BACKEND_RTT=y
CONFIG_LOG_BACKEND_UART=y
CONFIG_LOG_PRINTK=y

#CONFIG_RAM_CONSOLE=y
#CONFIG_UART_CONSOLE=n
CONFIG_PRINTK=n





# Our MSense boards don't have a DCDC on them. This is necessary for the boards to function, or else they will brick!
CONFIG_BOARD_ENABLE_DCDC_APP=n
CONFIG_BOARD_ENABLE_DCDC_NET=n

# Clock Control. This KConfig Controls whether we use a Crystal (XTAL) or RC Oscilator.
CONFIG_CLOCK_CONTROL_NRF_K32SRC_RC=n
CONFIG_CLOCK_CONTROL_NRF_K32SRC_RC_CALIBRATION=n

CONFIG_CLOCK_CONTROL_NRF_K32SRC_XTAL=y

CONFIG_SOC_LFXO_CAP_INT_9PF=y
CONFIG_SOC_HFXO_CAP_INTERNAL=y
CONFIG_SOC_HFXO_CAP_INT_VALUE_X2=25


#Gpio Config
CONFIG_GPIO=y
CONFIG_NRFX_GPIOTE=y
# On the 5340 dev kit, pins 0.02 and 0.03 are configured as pins for an NFC antenna. Since we are using those pins for ppg,
# we need to use this KConfig to make them behave like normal. Apparently setting it in device tree is not enough, we have to use this KConfig
CONFIG_NFCT_PINS_AS_GPIOS=y

# SPI Config
CONFIG_SPI=y
#CONFIG_NRFX_QSPI=y

#I2C config
CONFIG_I2C=y
CONFIG_SENSOR=y



# CMSIS config
CONFIG_CMSIS_DSP=y
CONFIG_CMSIS_DSP_BASICMATH=y
CONFIG_CMSIS_DSP_COMPLEXMATH=n
CONFIG_CMSIS_DSP_CONTROLLER=n
CONFIG_CMSIS_DSP_DISTANCE=n
CONFIG_CMSIS_DSP_FASTMATH=y
CONFIG_CMSIS_DSP_FILTERING=y
CONFIG_CMSIS_DSP_MATRIX=y
CONFIG_CMSIS_DSP_STATISTICS=y
CONFIG_CMSIS_DSP_TRANSFORM=n
CONFIG_CMSIS_DSP_SUPPORT=y

# timer config
CONFIG_NRFX_TIMER0=y
CONFIG_NRFX_TIMER1=y

#FPU config
CONFIG_FPU=y
CONFIG_FP_HARDABI=y


# Library for buttons and LEDs
CONFIG_DK_LIBRARY=y



# Enable bluetooth and bonding
CONFIG_BT=y

#CONFIG_BT_BONDABLE=y
#CONFIG_BT_BONDING_REQUIRED=y


CONFIG_BT_DEVICE_APPEARANCE=833

CONFIG_BT_MAX_CONN=1



CONFIG_BT_PERIPHERAL=y
#CONFIG_BT_GAP_PERIPHERAL_PREF_PARAMS=y
CONFIG_BT_PERIPHERAL_PREF_MAX_INT=40
CONFIG_BT_PERIPHERAL_PREF_MIN_INT=24
CONFIG_BT_PERIPHERAL_PREF_LATENCY=0

#this is in miliseconds

CONFIG_BT_PERIPHERAL_PREF_TIMEOUT=800
CONFIG_BT_DEVICE_NAME="MSense4Left"


#CONFIG_BT_DEVICE_NAME_DYNAMIC=y



#CONFIG_BT_CTLR=y
#CONFIG_BT_CTLR_TX_PWR_ANTENNA=-8
#CONFIG_BT_CTLR_TX_PWR_MINUS_40=y


CONFIG_BT_SMP=n

# ENABLE device information service for bluetooth
CONFIG_BT_DIS=y
CONFIG_BT_DIS_MANUF="SenseLab"
CONFIG_BT_DIS_PNP=n
CONFIG_BT_DIS_MODEL="4.4.1 NAND"
CONFIG_BT_DIS_SETTINGS=y
CONFIG_BT_MAX_PAIRED=1

# Enable Battery service settings
CONFIG_BT_BAS=y

# I belive we do this because the flash reset function has a lot of stack usage.
CONFIG_BT_RX_STACK_SIZE=4096
#DFU/FOTA settings

#temporarily disabling for now

#CONFIG_MCUMGR=y
#
#CONFIG_STATS=y
#CONFIG_STATS_NAMES=y

#CONFIG_THREAD_MONITOR=y


CONFIG_BOOTLOADER_MCUBOOT=y

CONFIG_NCS_SAMPLE_MCUMGR_BT_OTA_DFU=y
#CONFIG_MCUBOOT_GENERATE_CONFIRMED_IMAGE=y


#CONFIG_MCUMGR_LOG_LEVEL_DBG=n

#CONFIG_MCUMGR_SMP_BT_AUTHEN=n

# For saving settings of bluetooth and other variables, turned off as there are currently issues getting it to work
#CONFIG_BT_SETTINGS=y
#CONFIG_SETTINGS_RUNTIME=y
#CONFIG_SETTINGS_NVS=y
#CONFIG_NVS=y

#CONFIG_SETTINGS_NONE=y

# not sure what this is
#CONFIG_MPU_ALLOW_FLASH_WRITE=y



CONFIG_TEST_RANDOM_GENERATOR=y
CONFIG_TIMER_RANDOM_GENERATOR=y


# Flash Driver Config
CONFIG_SPI_NOR=n
CONFIG_FLASH=y
CONFIG_NORDIC_QSPI_NOR=n
CONFIG_FLASH_MAP=y
CONFIG_FLASH_PAGE_LAYOUT=y
CONFIG_FLASH_LOG_LEVEL_WRN=y

CONFIG_SPI_NOR_FLASH_LAYOUT_PAGE_SIZE=4096

# Partition Manager Config

CONFIG_PM_EXTERNAL_FLASH_MCUBOOT_SECONDARY=n

# Disk Driver Config
CONFIG_DISK_DRIVER_FLASH=n
CONFIG_DISK_DRIVER_RAM=n
CONFIG_DISK_DRIVER_RAW_NAND=y

# File System Config
CONFIG_FILE_SYSTEM=y
CONFIG_PM_OVERRIDE_EXTERNAL_DRIVER_CHECK=y
CONFIG_MASS_STORAGE_DISK_NAME="SD"
#CONFIG_FILE_SYSTEM_LITTLEFS=y
CONFIG_FAT_FILESYSTEM_ELM=y

CONFIG_FS_FATFS_READ_ONLY=n
# below config is necessary because this determines the buffer fatfs internally uses to store reads which we do at a size of 4096
CONFIG_FS_FATFS_MAX_SS=4096
CONFIG_FS_FATFS_EXFAT=n
CONFIG_FS_FATFS_MAX_ROOT_ENTRIES=4096
CONFIG_FS_FATFS_LFN=y


CONFIG_FS_LITTLEFS_CACHE_SIZE=128
CONFIG_FS_LITTLEFS_READ_SIZE=16
CONFIG_FS_LITTLEFS_PROG_SIZE=16




#USB related configs
CONFIG_USB_DEVICE_STACK=y
CONFIG_USB_DEVICE_PRODUCT="Zephyr MSC sample"
CONFIG_USB_DEVICE_PID=0x0008
CONFIG_USB_MASS_STORAGE=y

CONFIG_USB_DEVICE_LOG_LEVEL_INF=y
CONFIG_USB_MASS_STORAGE_LOG_LEVEL_INF=y
CONFIG_USB_DEVICE_INITIALIZE_AT_BOOT=n
CONFIG_MASS_STORAGE_STACK_SIZE=4096


# Our custom Configs, which are defined in the "Kconfig" file
CONFIG_USB_ALWAYS_ON=n
CONFIG_MSENSE3_BLUETOOTH_DATA_UPDATES=n

CONFIG_USE_FIXED_PPG_BRIGHTNESS=n

CONFIG_LOG_LEVEL_IMU_COLLECTION=2
CONFIG_LOG_LEVEL_PPG_COLLECTION=2


# General System Memory and stack Configs
CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE=20192
# CONFIG_SYSTEM_WORKQUEUE_PRIORITY=-1
CONFIG_HEAP_MEM_POOL_SIZE=5384
CONFIG_MAIN_STACK_SIZE=20192

